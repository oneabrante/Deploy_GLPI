name: CI

on:
  pull_request: 
    branches:
      - master
  push:
    branches:
      - dev-k8s

env:
  glpi: abrantedevops/glpi_nginx:latest
  
  path_dockerfile: ./.docker/app


jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Build Docker images
              run: |
                docker build -t ${{ env.glpi }} ${{ env.path_dockerfile }}
    
    Test-Services:
        needs: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Run Docker images
              run: |
                docker run -d --name glpi -p 80:80 ${{ env.glpi }}
                sleep 30
                curl -I http://localhost:80

            - name: Setup Python Version
              uses: actions/setup-python@v2
              with:
                python-version: 3.8

            - name: Execute Python tests
              run: python ./verify/check.py

    Vulnerabilities:
        needs: Test-Services
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install Trivy
              run: |
                wget https://github.com/aquasecurity/trivy/releases/download/v0.51.1/trivy_0.51.1_Linux-64bit.deb
                sudo dpkg -i trivy_0.51.1_Linux-64bit.deb

            - name: Scan Docker images
              run: |
                trivy image ${{ env.glpi }}
              
    Registry:
        needs: Vulnerabilities
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
        
            - name: Login to DockerHub
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ secrets.USER }}
                password: ${{ secrets.PASS }}
        
            - name: Push Docker images
              run: |
                docker build -t ${{ env.glpi }} ${{ env.path_dockerfile }}
                docker push ${{ env.glpi }}
